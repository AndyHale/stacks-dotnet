resources:
- repo: self
queue:
  name: Hosted Linux Preview
steps:

- script: |
    az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
    az account set -s $AZURE_SUBSCRIPTION_ID
    az acr login --name $AZURE_ACR_NAME_NONPROD
  displayName: Azure login
  env:
    AZURE_CLIENT_SECRET: $(azure_client_secret)

- script: |
    docker run -v "$(pwd):/repo" gittools/gitversion | tee gitversion.json
    export FULLSEMVER=$(cat gitversion.json | jq .FullSemVer -r)
    export FULLSEMVERPARSED=$(echo $FULLSEMVER | sed "s/+/./g")
    echo "##vso[build.updatebuildnumber]$FULLSEMVERPARSED"
  displayName: GitVersion
  workingDirectory: $(Build.SourcesDirectory)


- script: |
    echo $BUILD_BUILDNUMBER
    docker build . -t dotnet:$BUILD_BUILDNUMBER -t $AZURE_ACR_NAME_NONPROD.azurecr.io/dotnet:$BUILD_BUILDNUMBER -t $AZURE_ACR_NAME_NONPROD.azurecr.io/dotnet:latest
    docker push $AZURE_ACR_NAME_NONPROD.azurecr.io/dotnet
  displayName: Docker build and push
  workingDirectory: $(Build.SourcesDirectory)/source

- script: | 
    helm lint dotnet --values dotnet/values.dev.yaml
    helm lint dotnet --values dotnet/values.test.yaml
  displayName: helm lint
  workingDirectory: $(Build.SourcesDirectory)/config/k8s/helm-chart

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact - Helm Chart
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/config/k8s/helm-chart'
    ArtifactName: 'helm'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact - Deploy scripts
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/config/scripts'
    ArtifactName: 'deploy'