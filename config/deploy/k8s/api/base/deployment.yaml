kind: Deployment
apiVersion: apps/v1
metadata:
  name: aspnetapp
  namespace: default
  labels:
    app.kubernetes.io/name: aspnetapp
    app.kubernetes.io/part-of: aspnetapp
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: aspnetapp
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: stacks
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aspnetapp
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: stacks
      annotations:
        app.kubernetes.io/version: "2019.06.06-1105"
        app.kubernetes.io/instance: aspnetapp   # A unique name identifying the instance of an application, useful when multiple instances can be executed side by side
        app.kubernetes.io/managed-by: stacks-dotnet
        environment : dev                       # dev, qa, staging, canary, production
        stage: stable                           # stage/Phase: stable, canary
        applicationId: aspnetapp
        applicationName: stacks/aspnetapp
        version: 2019.06.06-1105                #version number
        release: 0.0.1                          #release number
        releasedOn: "2019-06-07 20:44"          #Release date
        owner: amido/dotnet                     #Team-Name/Josh
        role: ui                                #ui/api/cache/database/auth/jobs/worker
        tier: frontend                          #back-end for non oublic acessible services
        public: yes                             #yes/no (Is the resource part of an app that is customer facing?)
        projectID: stacks-dotnet
        customerID: amido
    spec:
#      serviceAccountName: nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: amidostacksacrukstmp.azurecr.io/guibirow/aspnetapp:2019.06.06-1105
#          args:
#            - /nginx-ingress-controller
#            - --configmap=$(POD_NAMESPACE)/nginx-configuration
#          securityContext:
#            allowPrivilegeEscalation: false
#            capabilities:
#              drop:
#               - ALL
#              add:
#                - NET_BIND_SERVICE
#             www-data -> 33
#            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10